Python for informatics - Chapter 1 exercises

1.1 What is the function of secondary memory in a computer?

	c) Store information for the long term - even beyond a power cycle.

1.2 What is a program?

A set of instructions that specifies a computation. 
(Severence's definition from the glossary)

[

Also introduced was the idea that the program is our "story" 
and the problem we are trying to solve is the "idea" that story conveys.

An additional dimension is that python is the language through which programers speak to one another. This includes ourselves later as the code-text evolves. 

These are both ideas Severence puts forward when discussing what a program is, however, these ideas are used more as heuristics, while the idea of specifying a computation is more precise.

]

1.3 What is the difference between a compiler and an interpreter?

Compiled code is converted entirely to machine or byte code at the time of compilation. 

An interpreter works with code one line at a time. Severence uses the term "conversational".

[This does not seem to really answer the question, but reviewing the text of ch 1 does not offer more precision.]

1.4 Which of the following contains "Machine code"?

a) The python interpreter. 

1.5 What is wrong with the following code?

-----
primt 'Hello world!' 
-----

A syntax error of "primt" rather than "print"

1.6 Where in the computer is the value X stored after the following python line finishes?

-----
x = 123
-----

b) main memory

1.7 What will the following program print out?

-----
x = 43
x = x + 1
print x
-----

H: 44
O: 44

1.8 Explain each of the following using an example of a human capability:
	1. CPU
	2. Main Memory
	3. Secondary Memory
	4. Input Device
	5. Output Device

	1. Brain
	2. Working memory [Executive psychological function including phonological
		loop and visual spatial sketch pad]
	3. Episodic memory / or perhaps better to say "notes"
	4. Ears, eyes, touch etc.
	5. Speech, movement.

1.9 How do you fix a syntax error?

Check the "grammar" of the statement pointed to with the understanding that the interpreter does not understand what to do. Work backwards from the statement you are working with if no error is found in the line you start with.
